<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <span class="text-bold"><a class="Link--inTextBlock" href="https://mdecd2025.github.io/hw-41223140/">https://mdecd2025.github.io/hw-41223140/</a></span></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-41223140">https://github.com/mdecd2025/hw-41223140</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p></p>
<h1>week</h1>
<h2>w1</h2>
<p>各組員網站及倉儲程式碼</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false"># 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
# 而所導入的 document 可以指向網頁中的特定 id 內容
from browser import html, document
# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2a.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")
# 
# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應
brython_div1 = document["brython_div1"]
# 利用 Brython 的 "&lt;=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置
# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference
brython_div1 &lt;= "1. " + html.A("2a-ag3", href="https://mdecd2025.github.io/2a-ag3/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag3")
# 利用 html.BR() 插入 break 標註
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "2. " + html.A("41223138", href="https://mdecd2025.github.io/hw-41223138/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223138")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "3. " + html.A("41223140", href="https://mdecd2025.github.io/hw-41223140/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223140")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "4. " + html.A("41223143", href="https://mdecd2025.github.io/hw-41223143/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223143")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "5. " + html.A("41223144", href="https://mdecd2025.github.io/hw-41223144/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223144")</pre>
<p><span>1. </span><a href="https://mdecd2025.github.io/2a-ag3/">2a-ag3</a><a href="https://github.com/mdecd2025/2a-ag3">(repo)</a><br/><span>2. </span><a href="https://mdecd2025.github.io/hw-41223138/">41223138</a><a href="https://github.com/mdecd2025/hw-41223138">(repo)</a><br/><span>3. </span><a href="https://mdecd2025.github.io/hw-41223140/">41223140</a><a href="https://github.com/mdecd2025/hw-41223140">(repo)</a><br/><span>4. </span><a href="https://mdecd2025.github.io/hw-41223143/">41223143</a><a href="https://github.com/mdecd2025/hw-41223143">(repo)</a><br/><span>5. </span><a href="https://mdecd2025.github.io/hw-41223144/">41223144</a><a href="https://github.com/mdecd2025/hw-41223144">(repo)</a></p>
<h2>w3</h2>
<p><span>列出各班目前尚未納入分組的學員名單</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 甲班學員資料處理
url = "https://mde.tw/list/2a.txt"
data = open(url).readlines()
all_stud = data[1:]
a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']
  
# 顯示甲班標題
print("甲班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in a_all_members:
        print(stud_num)
  
# 乙班學員資料處理
url = "https://mde.tw/list/2b.txt"
data = open(url).readlines()
all_stud = data[1:]
b_all_members = ['41223251', '41223211', '41223245', '41223243', 'jjjay41223212', 'leeshaowei0716', '41223234', '41223209', '41223205', '41223201', '41223202', '41223208-hw', '41223216', '41223217', '41223248', 'emma0312', '41223242', '41223203', '41223144', '41223235', 'RAY41223215', 'hyy41223228', '41223227', '41223206', '41223226-0', 'Cloud41223237', 'Yujenchuang', '41223225', 'ljg41223220', 'supowen', 'jacky93111', '41223246', 'Liu41223244', '41223236', '41223219', '41271237', '41223249', '41223229', '41223224', '41223222', '41223231', 'linryan23', '41023114', '41223230', 'timluo123', 'CYC41223247', '41223218', 'ych0227', '41023215', '41023216', '41023213', '41071203', '41071204', '41071202', 'c-ching', 'YUN4', 'tseYU000', 'snowfall-killer', 'junpig10']
  
# 顯示乙班標題
print("\n乙班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in b_all_members:
        print(stud_num)</pre>
<p>甲班:<br/>41023220<br/>41223111<br/>41223119<br/>41223124<br/>41223148</p>
<p>乙班:<br/>40923137<br/>41023237<br/>41223210<br/>41223214<br/>41223232<br/>41223233<br/>41223239<br/>41271217<br/>41271236</p>
<h2>w4</h2>
<p>SSH設定</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/r5vpdiSTnVo?si=kH689jGrHptaAGYP" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p></p>
<p></p>
<p></p><h2>w5</h2>
<h3>webots摘要</h3>
<p data-end="592" data-start="40"><strong data-end="59" data-start="40">What is Webots?</strong></p>
<p data-end="592" data-start="40">Webots is a professional mobile robot simulation software that allows users to create 3D virtual worlds with physics properties like mass, friction, and joints. Users can add robots with various locomotion types (wheeled, legged, flying) and equip them with sensors and actuators (e.g., cameras, motors). It also supports programming robots for specific behaviors, with many models and examples to assist users. Webots can interface with real robots, allowing control programs to be transferred from simulation to real-world robots.</p>
<p data-end="712" data-start="594"><strong data-end="624" data-start="594">What can I do with Webots?</strong></p>
<p data-end="712" data-start="594">Webots is suitable for research and educational projects in mobile robotics, including:</p>
<ul data-end="914" data-start="713">
<li data-end="739" data-start="713">Mobile robot prototyping</li>
<li data-end="795" data-start="740">Locomotion research (e.g., legged or humanoid robots)</li>
<li data-end="841" data-start="796">Multi-agent and swarm intelligence research</li>
<li data-end="877" data-start="842">Adaptive behavior and AI research</li>
<li data-end="897" data-start="878">Teaching robotics</li>
<li data-end="914" data-start="898">Robot contests</li>
</ul>
<p data-end="1197" data-start="916"><strong data-end="957" data-start="916">What do I need to know to use Webots?</strong></p>
<p data-end="1197" data-start="916">To develop simulations in Webots, users need basic knowledge of C, C++, Java, Python, or MATLAB for programming robot controllers. Additionally, knowledge of 3D graphics and VRML97 may be needed for creating custom robot models or objects.</p>
<p data-end="1415" data-start="1199"><strong data-end="1229" data-start="1199">How do I get User Support?</strong></p>
<p data-end="1415" data-start="1199">Cyberbotics offers paid support through Premier Service plans, while community-based support is available through platforms like Robotics StackExchange, GitHub Discussions, and Discord.</p>
<p data-end="1450" data-start="1417"><strong data-end="1450" data-start="1417">Webots Simulation Components:</strong></p>
<ul data-end="1670" data-start="1451">
<li data-end="1513" data-start="1451"><strong data-end="1475" data-start="1453">World File (.wbt):</strong> Defines robots and their environment.</li>
<li data-end="1602" data-start="1514"><strong data-end="1540" data-start="1516">Controller Programs:</strong> Written in supported languages (C/C++, Java, Python, MATLAB).</li>
<li data-end="1670" data-start="1603"><strong data-end="1635" data-start="1605">Physics Plugin (optional):</strong> Modifies regular physics behavior.</li>
</ul>
<p data-end="1943" data-start="1672"><strong data-end="1692" data-start="1672">What is a World?</strong></p>
<p data-end="1943" data-start="1672">A world in Webots is a 3D description of robots and their environment, including properties like position, appearance, and physical attributes. World files do not contain controller code but specify the name of the required controller for each robot.</p>
<p data-end="2297" data-start="1945"><strong data-end="1970" data-start="1945">What is a Controller?</strong></p>
<p data-end="2297" data-start="1945">A controller is a program that controls a robot in the world file. It can be written in C, C++, Java, Python, or MATLAB. When the simulation starts, Webots launches each controller as a separate process associated with the respective robots. The source and binary files are stored in a controller directory within the project.</p>
<p data-end="2592" data-is-last-node="" data-is-only-node="" data-start="2299"><strong data-end="2335" data-start="2299">What is a Supervisor Controller?</strong></p>
<p data-end="2592" data-is-last-node="" data-is-only-node="" data-start="2299">A Supervisor controller is a special type of controller with enhanced capabilities. It controls robots with a supervisor field set to TRUE, allowing privileged operations such as moving robots to random positions or making video captures of the simulation.</p>
<h3>文章中的重要的英文單字與解釋, 以及出現在文句中的用法:</h3>
<ol data-end="4009" data-start="39">
<li data-end="186" data-start="39">
<p data-end="60" data-start="42"><strong data-end="60" data-start="42">Simulation（仿真）</strong></p>
<ul data-end="186" data-start="64">
<li data-end="88" data-start="64"><strong data-end="72" data-start="66">解釋</strong>：模擬真實世界過程或系統的操作。</li>
<li data-end="186" data-start="92"><strong data-end="100" data-start="94">用法</strong>："Webots is a professional mobile robot simulation software."（Webots 是一款專業的移動機器人仿真軟體。）</li>
</ul>
</li>
<li data-end="424" data-start="188">
<p data-end="208" data-start="191"><strong data-end="208" data-start="191">Prototype（原型）</strong></p>
<ul data-end="424" data-start="212">
<li data-end="242" data-start="212"><strong data-end="220" data-start="214">解釋</strong>：從中開發出其他形式的產品的初始模型或版本。</li>
<li data-end="424" data-start="246"><strong data-end="254" data-start="248">用法</strong>："Webots is well suited for research and educational projects related to mobile robotics, including mobile robot prototyping."（Webots 非常適合用於與移動機器人相關的研究和教育項目，包括移動機器人原型製作。）</li>
</ul>
</li>
<li data-end="634" data-start="426">
<p data-end="447" data-start="429"><strong data-end="447" data-start="429">Locomotion（運動）</strong></p>
<ul data-end="634" data-start="451">
<li data-end="480" data-start="451"><strong data-end="459" data-start="453">解釋</strong>：從一個地方到另一個地方移動的能力或行為。</li>
<li data-end="634" data-start="484"><strong data-end="492" data-start="486">用法</strong>："These robots can have different locomotion schemes (wheeled robots, legged robots, or flying robots)."（這些機器人可以有不同的運動方式（如輪式機器人、腿式機器人或飛行機器人）。）</li>
</ul>
</li>
<li data-end="920" data-start="636">
<p data-end="656" data-start="639"><strong data-end="656" data-start="639">Actuator（執行器）</strong></p>
<ul data-end="920" data-start="660">
<li data-end="687" data-start="660"><strong data-end="668" data-start="662">解釋</strong>：負責移動或控制機械裝置或系統的設備。</li>
<li data-end="920" data-start="691"><strong data-end="699" data-start="693">用法</strong>："They may be equipped with a number of sensor and actuator devices, such as distance sensors, drive wheels, cameras, motors, touch sensors, emitters, receivers, etc."（它們可能配備多種傳感器和執行器設備，如距離傳感器、驅動輪、攝像頭、電動機、觸摸傳感器、發射器、接收器等。）</li>
</ul>
</li>
<li data-end="1085" data-start="922">
<p data-end="942" data-start="925"><strong data-end="942" data-start="925">Interface（介面）</strong></p>
<ul data-end="1085" data-start="946">
<li data-end="972" data-start="946"><strong data-end="954" data-start="948">解釋</strong>：兩個系統、學科或組織相互作用的點。</li>
<li data-end="1085" data-start="976"><strong data-end="984" data-start="978">用法</strong>："Webots also contains a number of interfaces to real mobile robots..."（Webots 還包含多個與真實移動機器人接口的功能...）</li>
</ul>
</li>
<li data-end="1269" data-start="1087">
<p data-end="1106" data-start="1090"><strong data-end="1106" data-start="1090">Behavior（行為）</strong></p>
<ul data-end="1269" data-start="1110">
<li data-end="1139" data-start="1110"><strong data-end="1118" data-start="1112">解釋</strong>：機器人或系統響應命令或與環境互動的方式。</li>
<li data-end="1269" data-start="1143"><strong data-end="1151" data-start="1145">用法</strong>："Finally, the user can program each robot individually to exhibit the desired behavior."（最後，用戶可以為每個機器人單獨編程，表現出所需的行為。）</li>
</ul>
</li>
<li data-end="1566" data-start="1271">
<p data-end="1289" data-start="1274"><strong data-end="1289" data-start="1274">Physics（物理）</strong></p>
<ul data-end="1566" data-start="1293">
<li data-end="1324" data-start="1293"><strong data-end="1301" data-start="1295">解釋</strong>：研究物質和能量的本質及其相互關係的科學領域。</li>
<li data-end="1566" data-start="1328"><strong data-end="1336" data-start="1330">用法</strong>："Webots offers a rapid prototyping environment, that allows the user to create 3D virtual worlds with physics properties such as mass, joints, friction coefficients, etc."（Webots 提供一個快速原型製作環境，允許用戶創建具有物理屬性（如質量、關節、摩擦係數等）的 3D 虛擬世界。）</li>
</ul>
</li>
<li data-end="1773" data-start="1568">
<p data-end="1584" data-start="1571"><strong data-end="1584" data-start="1571">Model（模型）</strong></p>
<ul data-end="1773" data-start="1588">
<li data-end="1618" data-start="1588"><strong data-end="1596" data-start="1590">解釋</strong>：用於理解或模擬現實世界對等物的系統或物體。</li>
<li data-end="1773" data-start="1622"><strong data-end="1630" data-start="1624">用法</strong>："Webots contains a large number of robot models and controller program examples to help users get started."（Webots 包含大量的機器人模型和控制程式範例，以幫助用戶入門。）</li>
</ul>
</li>
<li data-end="1950" data-start="1775">
<p data-end="1797" data-start="1778"><strong data-end="1797" data-start="1778">Controller（控制器）</strong></p>
<ul data-end="1950" data-start="1801">
<li data-end="1826" data-start="1801"><strong data-end="1809" data-start="1803">解釋</strong>：在仿真中控制機器人或系統的程式。</li>
<li data-end="1950" data-start="1830"><strong data-end="1838" data-start="1832">用法</strong>："A controller is a computer program that controls a robot specified in a world file."（控制器是控制在世界檔案中指定的機器人的電腦程式。）</li>
</ul>
</li>
<li data-end="2157" data-start="1952">
<p data-end="1974" data-start="1956"><strong data-end="1974" data-start="1956">Supervisor（主管）</strong></p>
<ul data-end="2157" data-start="1979">
<li data-end="2011" data-start="1979"><strong data-end="1987" data-start="1981">解釋</strong>：一種特殊的控制器，具有比普通控制器更多的權限。</li>
<li data-end="2157" data-start="2016"><strong data-end="2024" data-start="2018">用法</strong>："The Supervisor controller is the controller of a Robot whose supervisor field is set to TRUE..."（主管控制器是控制一個設置了主管欄位為 TRUE 的機器人的控制器。）</li>
</ul>
</li>
<li data-end="2311" data-start="2159">
<p data-end="2180" data-start="2163"><strong data-end="2180" data-start="2163">Privilege（特權）</strong></p>
<ul data-end="2311" data-start="2185">
<li data-end="2210" data-start="2185"><strong data-end="2193" data-start="2187">解釋</strong>：賦予用戶或系統的特殊權限或優勢。</li>
<li data-end="2311" data-start="2215"><strong data-end="2223" data-start="2217">用法</strong>："The Supervisor controller will have access to privileged operations."（主管控制器將可以訪問特權操作。）</li>
</ul>
</li>
<li data-end="2493" data-start="2313">
<p data-end="2331" data-start="2317"><strong data-end="2331" data-start="2317">Plugin（插件）</strong></p>
<ul data-end="2493" data-start="2336">
<li data-end="2359" data-start="2336"><strong data-end="2344" data-start="2338">解釋</strong>：一種可以增加功能的軟體元件。</li>
<li data-end="2493" data-start="2364"><strong data-end="2372" data-start="2366">用法</strong>："An optional physics plugin that can be used to modify Webots regular physics behavior."（一個可選的物理插件，用來修改 Webots 常規的物理行為。）</li>
</ul>
</li>
<li data-end="2684" data-start="2495">
<p data-end="2516" data-start="2499"><strong data-end="2516" data-start="2499">Hierarchy（層級）</strong></p>
<ul data-end="2684" data-start="2521">
<li data-end="2550" data-start="2521"><strong data-end="2529" data-start="2523">解釋</strong>：專案或物件按等級或層次排列的系統或結構。</li>
<li data-end="2684" data-start="2555"><strong data-end="2563" data-start="2557">用法</strong>："Worlds are organized as hierarchical structures where objects can contain other objects..."（世界被組織為層級結構，其中物件可以包含其他物件...）</li>
</ul>
</li>
<li data-end="2901" data-start="2686">
<p data-end="2723" data-start="2690"><strong data-end="2723" data-start="2690">Prototype File (.proto)（原型檔案）</strong></p>
<ul data-end="2901" data-start="2728">
<li data-end="2766" data-start="2728"><strong data-end="2736" data-start="2730">解釋</strong>：Webots 中用於定義可重用物件模型及其屬性的檔案格式。</li>
<li data-end="2901" data-start="2771"><strong data-end="2779" data-start="2773">用法</strong>："The .wbt file does sometimes depend on external PROTO files (.proto) and textures."（.wbt 檔案有時依賴外部的 PROTO 檔案（.proto）和紋理。）</li>
</ul>
</li>
<li data-end="3093" data-start="2903">
<p data-end="2926" data-start="2907"><strong data-end="2926" data-start="2907">Environment（環境）</strong></p>
<ul data-end="3093" data-start="2931">
<li data-end="2954" data-start="2931"><strong data-end="2939" data-start="2933">解釋</strong>：機器人操作的周圍條件或背景。</li>
<li data-end="3093" data-start="2959"><strong data-end="2967" data-start="2961">用法</strong>："A world in Webots is a 3D description of the properties of robots and of their environment."（Webots 中的世界是對機器人及其環境屬性的 3D 描述。）</li>
</ul>
</li>
<li data-end="3379" data-start="3095">
<p data-end="3129" data-start="3099"><strong data-end="3129" data-start="3099">Privilege Operations（特權操作）</strong></p>
<ul data-end="3379" data-start="3134">
<li data-end="3173" data-start="3134"><strong data-end="3142" data-start="3136">解釋</strong>：通常只能由人類操作員執行的操作，主管控制器可以執行這些操作。</li>
<li data-end="3379" data-start="3178"><strong data-end="3186" data-start="3180">用法</strong>："The privileged operations include simulation control, for example, moving the robots to a random position, making a video capture of the simulation, etc."（特權操作包括仿真控制，例如將機器人移動到隨機位置，進行仿真視頻捕捉等。）</li>
</ul>
</li>
<li data-end="3587" data-start="3381">
<p data-end="3400" data-start="3385"><strong data-end="3400" data-start="3385">Custom（定制的）</strong></p>
<ul data-end="3587" data-start="3405">
<li data-end="3427" data-start="3405"><strong data-end="3413" data-start="3407">解釋</strong>：根據特定要求或偏好製作的。</li>
<li data-end="3587" data-start="3432"><strong data-end="3440" data-start="3434">用法</strong>："Cyberbotics provides paid user support through its Premier Service plans and Custom Development services."（Cyberbotics 透過其高級服務計畫和定制開發服務提供付費用戶支持。）</li>
</ul>
</li>
<li data-end="3828" data-start="3589">
<p data-end="3619" data-start="3593"><strong data-end="3619" data-start="3593">Community-Based（社群支持的）</strong></p>
<ul data-end="3828" data-start="3624">
<li data-end="3653" data-start="3624"><strong data-end="3632" data-start="3626">解釋</strong>：基於用戶社群的支持或互動，而非商業服務。</li>
<li data-end="3828" data-start="3658"><strong data-end="3666" data-start="3660">用法</strong>："Community-based support is also available in various places, however, there is no guarantee you will get an answer to your question."（社群支持也在多個地方提供，但不能保證你能得到答案。）</li>
</ul>
</li>
<li data-end="4009" data-start="3830">
<p data-end="3849" data-start="3834"><strong data-end="3849" data-start="3834">Texture（紋理）</strong></p>
<ul data-end="4009" data-start="3854">
<li data-end="3874" data-start="3854"><strong data-end="3862" data-start="3856">解釋</strong>：物體表面的質量或外觀。</li>
<li data-end="4009" data-start="3879"><strong data-end="3887" data-start="3881">用法</strong>："The .wbt file does sometimes depend on external PROTO files (.proto) and textures."（.wbt 檔案有時依賴外部的 PROTO 檔案（.proto）和紋理。）</li>
</ul>
</li>
</ol>
<p data-end="4041" data-is-last-node="" data-is-only-node="" data-start="4011">這些單字對於理解 Webots 及其組件、仿真過程非常重要。</p>
<h3>webots練習影片</h3>
<p data-end="4041" data-is-last-node="" data-is-only-node="" data-start="4011"><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/9-_NCyLVvUU?si=61PJprS6O_ttZqRs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<h2>w6</h2>
<p>投球機零件及組合檔案:<a href="/downloads/投球機.7z">投球機.7z</a></p>
<p>投球機零件繪圖過程</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/Xz3OgyhORB0?si=mXMKkx3QrEQDs-Tq" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p>投球機組合過程</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/I0e40Bwi4Ac?si=SYEnMrGRqsv6k-Hz" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p><h2>w8</h2>
<p>四連桿零件及組合檔案:<a href="/downloads/四連桿.7z">四連桿.7z</a></p>
<p>四連桿零件繪製過程</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/J4A6IkaGJ4U?si=eXCekhihEzVQO2LO" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p>四連桿組合過程</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/9fCbDOSdYFA?si=NrfyLb7HLomPyY4F" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p><h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p></p>
<h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p></p>
<h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<p></p>
<h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:點<a href="https://mdecd2025.github.io/hw-41223140/content/w1.html">這裡</a>可以查看各週進度</p>
<p>各週網頁內容:</p>
<p>w1 利用程式碼列出組員的倉儲及網站連結</p>
<p>w3 利用程式碼列出未分組的學員</p>
<p>w4 SSH設定</p>
<p>w5 回答問題以及webots場景建立</p>
<p>w6 繪製投球機零件及組合</p>
<p>w8 繪製四連桿零件及組合</p>
<p>期中心得:這學期主要是學如何使用webots進行模擬，因為之前沒接觸過，所以還不太會用，不過有練習場景建立，如何新增物件，還有很多功能需要慢慢熟悉。這學期也有用SolveSpace畫零件跟組裝，這部分就比較熟悉了，畫得速度有比較快。</p>
<p>期中自評影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/_3XZtN6J9jc?si=c7YtbqBis1iFZbq3" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p></p>
<p></p>
<p style="padding-left: 30px;"></p><h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</p>
<h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號</p>
<h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>